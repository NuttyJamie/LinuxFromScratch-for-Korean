<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-adjusting">
  <?dbhtml filename="adjusting.html"?>

  <title>툴체인 조정</title>

  <para>이제 최종 C 라이브러리가 설치되었으므로, 새롭게 컴파일된 프로그램을 이들 새로운 라이브러리와 연결하도록 툴체인(toolchain)을 조정할 때가 되었다. </para>

  <para>먼저 <filename class="directory">/tools</filename> 링커를 백업하고 5장에서 만든 조정된 링커로 교체한다. 또 <filename class="directory">/tools/$(uname -m)-pc-linux-gnu/bin</filename>에 대한 링크도 만들 것이다:</para>

<screen><userinput>mv -v /tools/bin/{ld,ld-old}
mv -v /tools/$(uname -m)-pc-linux-gnu/bin/{ld,ld-old}
mv -v /tools/bin/{ld-new,ld}
ln -sv /tools/bin/ld /tools/$(uname -m)-pc-linux-gnu/bin/ld</userinput></screen>

  <para>다음으로 GCC spec 파일이 새로운 동적 링커를 참조하도록 수정한다. 단순히 <quote>/tools</quote>의 모든 인스턴스를 삭제하면 동적 링커에 대한 올바른 경로가 남는다. 또한 GCC가 올바른 헤더를 찾을 수 있는 위치와 Glibc 시작 파일을 찾을 수 있도록 spec 파일을 조정한다. <command>sed</command>  command accomplishes this:</para>

<screen><userinput>gcc -dumpspecs | sed -e 's@/tools@@g'                   \
    -e '/\*startfile_prefix_spec:/{n;s@.*@/usr/lib/ @}' \
    -e '/\*cpp:/{n;s@$@ -isystem /usr/include@}' &gt;      \
    `dirname $(gcc --print-libgcc-file-name)`/specs</userinput></screen>

  <para>It is a good idea to visually inspect the specs file to verify the
  intended change was actually made.</para>

  <para>It is imperative at this point to ensure that the basic
  functions (compiling and linking) of the adjusted toolchain are working
  as expected. To do this, perform the following sanity checks:</para>

<screen os="a"><userinput>echo 'int main(){}' &gt; dummy.c
cc dummy.c -v -Wl,--verbose &amp;&gt; dummy.log
readelf -l a.out | grep ': /lib'</userinput></screen>

  <para os="b">There should be no errors,
  and the output of the last command will be (allowing for
  platform-specific differences in dynamic linker name):</para>

<screen os="c"><computeroutput>[Requesting program interpreter: /lib64/ld-linux-x86-64.so.2]</computeroutput></screen>

  <para>Note that on 64-bit systems <filename class="directory">/lib</filename> is
  the location of our dynamic linker, but is accessed via a symbolic link
  in /lib64.</para>

  <note><para>On 32-bit systems the interpreter should be
  /lib/ld-linux.so.2.</para></note>

  <para os="d">Now make sure that we're setup to use the correct start files:</para>

<screen os="e"><userinput>grep -o '/usr/lib.*/crt[1in].*succeeded' dummy.log</userinput></screen>

  <para os="f">The output of the last command should be:</para>

<screen><computeroutput>/usr/lib/../lib/crt1.o succeeded
/usr/lib/../lib/crti.o succeeded
/usr/lib/../lib/crtn.o succeeded</computeroutput></screen>

  <para os="g">Verify that the compiler is searching for the correct header
  files:</para>

<screen><userinput>grep -B1 '^ /usr/include' dummy.log</userinput></screen>

  <para os="h">This command should return the following output:</para>

<screen><computeroutput>#include &lt;...&gt; search starts here:
 /usr/include</computeroutput></screen>

  <para os="i">Next, verify that the new linker is being used with the correct search paths:</para>

<screen os="j"><userinput>grep 'SEARCH.*/usr/lib' dummy.log |sed 's|; |\n|g'</userinput></screen>

  <para os="k">References to paths that have components with '-linux-gnu' should
  be ignored, but otherwise the output of the last command should be:</para>

<screen><computeroutput>SEARCH_DIR("/usr/lib")
SEARCH_DIR("/lib")</computeroutput></screen>

  <para os="l">Next make sure that we're using the correct libc:</para>

<screen os="m"><userinput>grep "/lib.*/libc.so.6 " dummy.log</userinput></screen>

  <para os="n">The output of the last command should be:</para>

<screen os="o"><computeroutput>attempt to open /lib/libc.so.6 succeeded</computeroutput></screen>

  <para os="p">Lastly, make sure GCC is using the correct dynamic linker:</para>

<screen os="q"><userinput>grep found dummy.log</userinput></screen>

  <para os="r">The output of the last command should be (allowing for
  platform-specific differences in dynamic linker name):</para>

<screen os="s"><computeroutput>found ld-linux-x86-64.so.2 at /lib/ld-linux-x86-64.so.2</computeroutput></screen>

  <para os="t">If the output does not appear as shown above or is not received
  at all, then something is seriously wrong. Investigate and retrace the
  steps to find out where the problem is and correct it. The most likely
  reason is that something went wrong with the specs file adjustment. Any
  issues will need to be resolved before continuing with the process.</para>

  <para os="u">Once everything is working correctly, clean up the test files:</para>

<screen os="v"><userinput>rm -v dummy.c a.out dummy.log</userinput></screen>

</sect1>
