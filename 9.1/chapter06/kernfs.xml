<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-kernfs">
  <?dbhtml filename="kernfs.html"?>

  <title>가상 커널 파일 시스템 준비</title>

  <indexterm zone="ch-system-kernfs">
    <primary sortas="e-/dev/">/dev/*</primary>
  </indexterm>

    <para>커널에 의해 내보내진 다양한 파일 시스템들은 커널 자체와 통신하는 데 사용된다. 이러한 파일 시스템은 디스크 공간이 사용되지 않는다는 점에서 가상적이라 할 수 있다. 파일 시스템의 내용들은 메모리에 상주한다.</para>

    <para>파일 시스템을 마운트할 디렉토리를 만드는 것부터 시작한다:</para>

<screen><userinput>mkdir -pv $LFS/{dev,proc,sys,run}</userinput></screen>

  <sect2>
    <title>초기 장치 노드 생성</title>

    <para>커널이 시스템을 부팅할 때 몇 개의 장치 노드, 특히 <filename
    class="devicefile">콘솔</filename>과 <filename
    class="devicefile">null</filename> 장치가 있어야 한다. 장치 노드는 <command>udevd</command>가 시작되기 전에, 그리고 리눅스가 <parameter>init=/bin/bash</parameter>로 시작될 때 사용할 수 있도록 하드 디스크에 생성되어야 한다. 다음 명령을 실행하여 장치를 생성하라:</para>

<screen><userinput>mknod -m 600 $LFS/dev/console c 5 1
mknod -m 666 $LFS/dev/null c 1 3</userinput></screen>

  </sect2>

  <sect2 id="ch-system-bindmount">
    <title>/dev 마운팅과 설정</title>

      <para><filename class="directory">/dev</filename> 디렉토리에 장치를 들이는 권장되는 방법은 <filename class="directory">/dev</filename> 디렉토리에 가상 파일 시스템(예: <systemitem class="filesystem">tmpfs</systemitem>)을 마운트하고, 장치가 감지되거나 액세스될 때 해당 가상 파일 시스템에 동적으로 생성되도록 하는 것이다. 장치 생성은 일반적으로 부팅 절차 중 Udev에 의해 이뤄진다. 지금 이 새로운 시스템은 아직 Udev가 없고 부팅되지도 않았기 때문에 수동으로 마운트를 하고 <filename class="directory">/dev</filename>를 채워야 한다. 이를 위해 호스트 시스템의 <filename class="directory">/dev</filename> 디렉토리를 바인딩한다. 바인딩 마운트는 디렉토리나 마운트 지점의 미러를 다른 위치에 만들 수 있는 특별한 유형의 마운트를 뜻한다. 이 작업을 수행하려면 다음 명령을 사용하라:</para>

<screen><userinput>mount -v --bind /dev $LFS/dev</userinput></screen>

  </sect2>

  <sect2 id="ch-system-kernfsmount">
    <title>가상 커널 파일 시스템 마운팅</title>

      <para>이제 나머지 가상 커널 파일 시스템을 마운트한다:</para>

<screen><userinput>mount -vt devpts devpts $LFS/dev/pts -o gid=5,mode=620
mount -vt proc proc $LFS/proc
mount -vt sysfs sysfs $LFS/sys
mount -vt tmpfs tmpfs $LFS/run</userinput></screen>

    <variablelist>
      <title>devpts에 대한 마운트 옵션들의 의미:</title>

      <varlistentry>
        <term><parameter>gid=5</parameter></term>
        <listitem>
          <para>devpts가 생성한 모드 장치 노드들을 그룹 ID 5가 소유한다. 이것은 우리가 나중에 <systemitem class="groupname">tty</systemitem> 그룹에 사용할 ID이다. 호스트 시스템이 그 <systemitem class="groupname">tty</systemitem> 그룹에 다른 ID를 사용할지도 모르기 때문에 이름 대신 그룹 ID를 사용한다.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>mode=0620</parameter></term>
        <listitem>
          <para>devpts가 생성한 모든 장치 노드가 0620 모드를 갖게한다. 위의 옵션과 함께, devpts가 grantpt()의 요구 사항을 만족하는 장치 노드를 생성하도록 한다. 이는 Glibc <command>pt_chown</command> helper 바이너리(기본적으로 설치되어 있지 않은)가 필요하지 않다는 의미이다.</para>
        </listitem>
      </varlistentry>

    </variablelist>

      <para>어떤 호스트 시스템에서는, <filename>/dev/shm</filename>이 <filename class="directory">/run/shm</filename>에 대한 심볼릭 링크이다. /run tmpfs은 위에 마운트되었으므로 디렉토리만 작성하면 된다.</para>

<screen><userinput>if [ -h $LFS/dev/shm ]; then
  mkdir -pv $LFS/$(readlink $LFS/dev/shm)
fi</userinput></screen>

  </sect2>

</sect1>
