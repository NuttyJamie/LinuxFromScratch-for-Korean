<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-ncurses" role="wrap">
  <?dbhtml filename="ncurses.html"?>

  <sect1info condition="script">
    <productname>ncurses</productname>
    <productnumber>&ncurses-version;</productnumber>
    <address>&ncurses-url;</address>
  </sect1info>

  <title>Ncurses-&ncurses-version;</title>

  <indexterm zone="ch-system-ncurses">
    <primary sortas="a-Ncurses">Ncurses</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>Ncurses 패키지는 문자 화면의 터미널 독립적 처리를 위한 라이브러리를 포함하고 있다.</para>

    <segmentedlist>
      <segtitle>&buildtime;</segtitle>
      <segtitle>&diskspace;</segtitle>

      <seglistitem>
        <seg>&ncurses-ch6-sbu;</seg>
        <seg>&ncurses-ch6-du;</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Ncurses 설치</title>

    <para>Configure에 의해 처리되지 않는 정적 라이브러리 설치를 비활성화 한다:</para>

<screen><userinput remap="pre">sed -i '/LIBTOOL_INSTALL/d' c++/Makefile.in</userinput></screen>

    <para>Ncurses 컴파일을 준비한다:</para>

<screen><userinput remap="configure">./configure --prefix=/usr           \
            --mandir=/usr/share/man \
            --with-shared           \
            --without-debug         \
            --without-normal        \
            --enable-pc-files       \
            --enable-widec</userinput></screen>

    <variablelist>
      <title>Configure 옵션들의 의미:</title>

      <varlistentry>
        <term><parameter>--enable-widec</parameter></term>
        <listitem>
          <para>일반 라이브러리(예: <filename
          class="libraryfile">libncurses.so.&ncurses-version;</filename>) 대신 와이드 문자 라이브러리(예: <filename
          class="libraryfile">libncursesw.so.&ncurses-version;</filename>)가 빌드된다. 이러한 와이드 문자 라이브러리는 멀티바이트 및 기존의 8비트 로케일에서 모두 사용할 수 있으며, 일반 라이브러리는 8비트 로케일에서만 제대로 작동한다. 와이드 문자 및 일반 라이브러리는 소스끼리는 호환되지만 바이너리 호환은 되지 않는다. </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--enable-pc-files</parameter></term>
        <listitem>
          <para>pkg-config용 .pc 파일을 생성하고 설치한다.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--without-normal</parameter></term>
        <listitem>
          <para>대부분의 정적 라이브러리들의 빌드와 설치를 비활성화한다.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>패키지를 컴파일한다:</para>

<screen><userinput remap="make">make</userinput></screen>

    <para>이 패키지는 테스트 스위트가 있지만, 패키지가 설치된 후에만 실행할 수 있다. 테스트들은 <filename class="directory">test/</filename> 디렉토리에 있다. 자세한 내용은 해당 디렉토리의 <filename>README</filename> 파일을 참고하라.</para>

    <para>패키지를 설치한다:</para>

<screen><userinput remap="install">make install</userinput></screen>

    <para>공유 라이브러리들을 원래 있어야 할 <filename class="directory">/lib</filename> 디렉토리로 이동한다:</para>

<screen><userinput remap="install">mv -v /usr/lib/libncursesw.so.6* /lib</userinput></screen>

    <para>라이브러리가 이동되었기 때문에 존재하지 않는 파일을 가리키고 있는 심볼릭 링크 하나가 있다. 이것을 다시 만든다:</para>

<screen><userinput remap="install">ln -sfv ../../lib/$(readlink /usr/lib/libncursesw.so) /usr/lib/libncursesw.so</userinput></screen>

    <para>많은 응용 프로그램들은 여전히 링커가 비-와이드 문자(즉, 일반 8비트 로케일용) Ncurses 라이브러리를 찾을 수 있는 것처럼 작동할 것이다. 이러한 응용 프로그램들이 와이드 문자 라이브러리에 링크되도록 심볼릭 링크 및 링커 스크립트로 트릭을 쓴다:</para>

<screen><userinput remap="install">for lib in ncurses form panel menu ; do
    rm -vf                    /usr/lib/lib${lib}.so
    echo "INPUT(-l${lib}w)" &gt; /usr/lib/lib${lib}.so
    ln -sfv ${lib}w.pc        /usr/lib/pkgconfig/${lib}.pc
done</userinput></screen>

    <para>마지막으로, 빌드 시 <filename class="libraryfile">-lcurses</filename>를 찾는 오래된 응용 프로그램들을 빌드 가능하도록 만든다:</para>

<screen><userinput remap="install">rm -vf                     /usr/lib/libcursesw.so
echo "INPUT(-lncursesw)" &gt; /usr/lib/libcursesw.so
ln -sfv libncurses.so      /usr/lib/libcurses.so</userinput></screen>

    <para>필요하다면, Ncurses 문서를 설치하라:</para>

<screen><userinput remap="install">mkdir -v       /usr/share/doc/ncurses-&ncurses-version;
cp -v -R doc/* /usr/share/doc/ncurses-&ncurses-version;</userinput></screen>

    <note>

      <para>소스로부터 컴파일하여 설치한 패키지는 런타임 중에 비-와이드 문자 Ncurses 라이브러리에 링크되지 않으므로, 위의 설명은 비-와이드 문자 Ncurses 라이브러리를 생성하지 않는다. 그러나 비-와이드 문자 Ncurses 라이브러리에 대해서만 링크하는 것으로 알려진 바이너리 전용 응용 프로그램들은 라이브러리 버전 5가 필요하다. 일부 바이너리 전용 응용 프로그램 때문에, 또는 LSB를 준수하기 위해 이러한 라이브러리가 필요하다면 다음 명령을 사용하여 패키지를 다시 빌드하라:</para>

<screen role="nodump"><userinput>make distclean
./configure --prefix=/usr    \
            --with-shared    \
            --without-normal \
            --without-debug  \
            --without-cxx-binding \
            --with-abi-version=5 
make sources libs
cp -av lib/lib*.so.5* /usr/lib</userinput></screen>
    </note>

  </sect2>

  <sect2 id="contents-ncurses" role="content">
    <title>Ncurses의 내용</title>

    <segmentedlist>
      <segtitle>설치된 프로그램들</segtitle>
      <segtitle>설치된 라이브러리들</segtitle>
      <segtitle>설치된 디렉토리들</segtitle>

      <seglistitem>
        <seg>
           captoinfo (tic로 링크), 
           clear, 
           infocmp, 
           infotocap (tic로 링크),
           ncursesw6-config, 
           reset (tset로 링크), 
           tabs, 
           tic, 
           toe, 
           tput, 
           tset
        </seg>
        <seg>
           libcursesw.so (libncursesw.so로 심볼릭 링크, 링커 스크립트),
           libformw.so, 
           libmenuw.so, 
           libncursesw.so,
           libncurses++w.a,
           libpanelw.so, 그리고 라이브러리 이름에 "w"가 없는 비-와이드 문자 대응 파일들.</seg>
        <seg>
           /usr/share/tabset, 
           /usr/share/terminfo,
           /usr/share/doc/ncurses-&ncurses-version;
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">요약</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="captoinfo">
        <term><command>captoinfo</command></term>
        <listitem>
          <para>termcap 내용을 terminfo 내용으로 변환</para>
          <indexterm zone="ch-system-ncurses captoinfo">
            <primary sortas="b-captoinfo">captoinfo</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="clear">
        <term><command>clear</command></term>
        <listitem>
          <para>화면을 지움(가능한 경우)</para>
          <indexterm zone="ch-system-ncurses clear">
            <primary sortas="b-clear">clear</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="infocmp">
        <term><command>infocmp</command></term>
        <listitem>
          <para>terminfo 내용 비교 또는 출력</para>
          <indexterm zone="ch-system-ncurses infocmp">
            <primary sortas="b-infocmp">infocmp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="infotocap">
        <term><command>infotocap</command></term>
        <listitem>
          <para>terminfo 내용을 termcap 내용으로 변환</para>
          <indexterm zone="ch-system-ncurses infotocap">
            <primary sortas="b-infotocap">infotocap</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ncursesw6-config">
        <term><command>ncursesw6-config</command></term>
        <listitem>
          <para>ncurses에 대한 구성 정보 제공</para>
          <indexterm zone="ch-system-ncurses ncursesw6-config">
            <primary sortas="b-ncursesw6-config">ncursesw6-config</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="reset">
        <term><command>reset</command></term>
        <listitem>
          <para>터미널을 기본값으로 다시 초기화</para>
          <indexterm zone="ch-system-ncurses reset">
            <primary sortas="b-reset">reset</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="tabs">
        <term><command>tabs</command></term>
        <listitem>
          <para>터미널의 탭 간격 초기화 및 설정</para>
          <indexterm zone="ch-system-ncurses tabs">
            <primary sortas="b-tabs">tabs</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="tic">
        <term><command>tic</command></term>
        <listitem>
          <para>terminfo entry-description 컴파일러는 terminfo 파일을 소스 형식에서 ncurses 라이브러리 루틴에 필요한 바이너리 형식으로 변환한다[terminfo 파일에는 특정 터미널의 기능에 대한 정보가 포함되어 있다.]</para>
          <indexterm zone="ch-system-ncurses tic">
            <primary sortas="b-tic">tic</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="toe">
        <term><command>toe</command></term>
        <listitem>
          <para>사용 가능한 모든 터미널 유형을 나열하고 각 터미널에 대한 기본 이름과 설명을 제공</para>
          <indexterm zone="ch-system-ncurses toe">
            <primary sortas="b-toe">toe</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="tput">
        <term><command>tput</command></term>
        <listitem>
          <para>셸에서 터미널 고유 기능들을 사용할 수 있게 한다; 터미널을 재설정 또는 초기화하거나 터미널 타입의 풀 네임을 보고하는 데도 사용할 수 있음</para>
          <indexterm zone="ch-system-ncurses tput">
            <primary sortas="b-tput">tput</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="tset">
        <term><command>tset</command></term>
        <listitem>
          <para>터미널을 초기화하는 데 사용</para>
          <indexterm zone="ch-system-ncurses tset">
            <primary sortas="b-tset">tset</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libcursesw">
        <term><filename class="libraryfile">libcursesw</filename></term>
        <listitem>
          <para><filename>libncursesw</filename>로 링크</para>
          <indexterm zone="ch-system-ncurses libcursesw">
            <primary sortas="c-libcursesw">libcursesw</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libncursesw">
        <term><filename class="libraryfile">libncursesw</filename></term>
        <listitem>
          <para>터미널 화면에 여러 가지 복잡한 방법으로 텍스트를 표시하는 기능을 포함. 이러한 기능을 사용하는 좋은 예는 커널의 <command>make menuconfig</command>동안 표시되는 메뉴이다.</para>
          <indexterm zone="ch-system-ncurses libncursesw">
            <primary sortas="c-libncursesw">libncursesw</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libformw">
        <term><filename class="libraryfile">libformw</filename></term>
        <listitem>
          <para>양식 구현 함수 포함</para>
          <indexterm zone="ch-system-ncurses libformw">
            <primary sortas="c-libformw">libformw</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libmenuw">
        <term><filename class="libraryfile">libmenuw</filename></term>
        <listitem>
          <para>메뉴 구현 함수 포함</para>
          <indexterm zone="ch-system-ncurses libmenuw">
            <primary sortas="c-libmenuw">libmenuw</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libpanelw">
        <term><filename class="libraryfile">libpanelw</filename></term>
        <listitem>
          <para>패널 구현 함수 포함</para>
          <indexterm zone="ch-system-ncurses libpanelw">
            <primary sortas="c-libpanelw">libpanelw</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
