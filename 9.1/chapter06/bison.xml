<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-bison" role="wrap">
  <?dbhtml filename="bison.html"?>

  <sect1info condition="script">
    <productname>bison</productname>
    <productnumber>&bison-version;</productnumber>
    <address>&bison-url;</address>
  </sect1info>

  <title>Bison-&bison-version;</title>

  <indexterm zone="ch-system-bison">
    <primary sortas="a-Bison">Bison</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>Bison 패키지에는 파서 생성기가 포함되어 있다.</para>

    <segmentedlist>
      <segtitle>&buildtime;</segtitle>
      <segtitle>&diskspace;</segtitle>

      <seglistitem>
        <seg>&bison-ch6-sbu;</seg>
        <seg>&bison-ch6-du;</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Bison 설치</title>
<!--
    <para>First, fix a build problem with the current version:</para>

<screen><userinput remap="pre">sed -i '9327 s/mv/cp/' Makefile.in</userinput></screen>
-->
    <para>Bison 컴파일을 준비한다:</para>

<screen><userinput remap="configure">./configure --prefix=/usr --docdir=/usr/share/doc/bison-&bison-version;</userinput></screen>

<!--  I could not find a race condidtion in the current version.
    <para>Compile the package, but work around a race condition in the 
    current version:</para>

<screen><userinput remap="make">make -j1</userinput></screen>-->

    <para>패키지를 컴파일한다:</para>

<screen><userinput remap="make">make</userinput></screen>

<!--
    <para>To test the results (about 2.2 SBU), issue:</para>

<screen><userinput remap="test">make check</userinput></screen>
-->

    <para>bison과 flex 사이에는 순환 의존성이 있다. 원한다면, 다음 절에서 flex를 설치한 후, bison 패키지를 재빌드하고 <command>make check</command>를 통해 bison 검사를 수행할 수 있다.</para>

    <para>패키지를 설치한다:</para>

<screen><userinput remap="install">make install</userinput></screen>

  </sect2>

  <sect2 id="contents-bison" role="content">
    <title>Bison의 내용</title>

    <segmentedlist>
      <segtitle>설치된 프로그램들</segtitle>
      <segtitle>설치된 라이브러리</segtitle>
      <segtitle>설치된 디렉토리</segtitle>

      <seglistitem>
        <seg>bison과 yacc</seg>
        <seg>liby.a</seg>
        <seg>/usr/share/bison</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">요약</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="bison">
        <term><command>bison</command></term>
        <listitem>
          <para>일련의 규칙으로부터 텍스트 파일의 구조를 분석하는 프로그램 생성, Bison은 Yacc(Yet Another Compiler Compiler)의 대체 프로그램</para>
          <indexterm zone="ch-system-bison bison">
            <primary sortas="b-bison">bison</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="yacc">
        <term><command>yacc</command></term>
        <listitem>
          <para><command>bison</command>의 래퍼, <command>bison</command> 대신 <command>yacc</command>를 호출하는 프로그램; <parameter>-y</parameter> 옵션과 함께 <command>bison</command>을 호출</para>
          <indexterm zone="ch-system-bison yacc">
            <primary sortas="b-yacc">yacc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="liby">
        <term><filename class="libraryfile">liby</filename></term>
        <listitem>
          <para>Yacc 호환 <function>yyerror</function> 및 <function>main</function> 함수를 포함하는 Yacc 라이브러리; 이 라이브러리는 일반적으로 그다지 유용하지는 않지만, POSIX에 필요하다</para>
          <indexterm zone="ch-system-bison liby">
            <primary sortas="c-liby">liby</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
