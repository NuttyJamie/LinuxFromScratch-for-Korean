<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-autoconf" role="wrap">
  <?dbhtml filename="autoconf.html"?>

  <sect1info condition="script">
    <productname>autoconf</productname>
    <productnumber>&autoconf-version;</productnumber>
    <address>&autoconf-url;</address>
  </sect1info>

  <title>Autoconf-&autoconf-version;</title>

  <indexterm zone="ch-system-autoconf">
    <primary sortas="a-Autoconf">Autoconf</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>Autoconf 패키지에는 소스 코드를 자동으로 구성할 수 있는 셸 스크립트를 생성하는 프로그램이 포함되어 있다.</para>

    <segmentedlist>
      <segtitle>&buildtime;</segtitle>
      <segtitle>&diskspace;</segtitle>

      <seglistitem>
        <seg>&autoconf-ch6-sbu;</seg>
        <seg>&autoconf-ch6-du;</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Autoconf 설치</title>

    <para>먼저 Perl 5.28에서 생성된 버그를 수정한다.</para>

<screen><userinput remap="pre">sed '361 s/{/\\{/' -i bin/autoscan.in</userinput></screen>

    <para>Autoconf 컴파일을 준비한다:</para>

<screen><userinput remap="configure">./configure --prefix=/usr</userinput></screen>

    <para>패키지를 컴파일한다:</para>

<screen><userinput remap="make">make</userinput></screen>
<!--
    <para>To test the results, issue:</para>-->
    <para>테스트 스위트는 현재 bash-5와 libtool-2.4.3에 의해 고장났다. 그래도 테스트를 하려면 실행하라:</para>

<screen><userinput remap="test">make check</userinput></screen>
<!--
    <para>This takes a long time, about &autoconf-ch6-sbu-tests; SBUs. In addition,
    several tests are skipped that use Automake. For full test coverage,
    Autoconf can be re-tested after Automake has been installed.  In addition,
    two tests fail due to changes in libtool-2.4.3 and later.</para>

    <note><para>The test time for autoconf can be reduced significantly on a
    system with multiple cores.  To do this, append
    <command>TESTSUITEFLAGS=-j&lt;N&gt;</command> to the line above.  For
    instance, using -j4 can reduce the test time by over 60
    percent.</para></note>
-->
    <para>패키지를 설치한다:</para>

<screen><userinput remap="install">make install</userinput></screen>

  </sect2>

  <sect2 id="contents-autoconf" role="content">
    <title>Autoconf의 내용</title>

    <segmentedlist>
      <segtitle>설치된 프로그램들</segtitle>
      <segtitle>설치된 디렉토리</segtitle>

      <seglistitem>
        <seg>autoconf, autoheader, autom4te, autoreconf, autoscan, autoupdate, ifnames</seg>
        <seg>/usr/share/autoconf</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">요약</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="autoconf">
        <term><command>autoconf</command></term>
        <listitem>
          <para>소프트웨어 소스 코드 패키지를 자동으로 구성하여 다양한 종류의 Unix류 시스템에 맞게 적용되는 셸 스크립트 생성; 소프트웨어 소스 코드 패키지가 생성하는 config 스크립트는 독립적이다&mdash;이를 실행할 때는 <command>autoconf</command> 프로그램이 필요하지 않음</para>
          <indexterm zone="ch-system-autoconf autoconf">
            <primary sortas="b-autoconf">autoconf</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="autoheader">
        <term><command>autoheader</command> </term>
        <listitem>
          <para>사용할 구성을 위해 C <emphasis>#define</emphasis>문 템플릿 파일을 만드는 도구</para>
          <indexterm zone="ch-system-autoconf autoheader">
            <primary sortas="b-autoheader">autoheader</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="autom4te">
        <term><command>autom4te</command></term>
        <listitem>
          <para>M4 매크로 프로세서의 래퍼</para>
          <indexterm zone="ch-system-autoconf autom4te">
            <primary sortas="b-autom4te">autom4te</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="autoreconf">
        <term><command>autoreconf</command></term>
        <listitem>
          <para><command>autoconf</command>, <command>autoheader</command>, <command>aclocal</command>, <command>automake</command>, <command>gettextize</command>, <command>libtoolize</command>를 올바른 순서로 자동 실행하여 <command>autoconf</command>와 <command>automake</command> 템플릿 파일이 수정될 때 시간을 절약한다</para>
          <indexterm zone="ch-system-autoconf autoreconf">
            <primary sortas="b-autoreconf">autoreconf</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="autoscan">
        <term><command>autoscan</command> </term>
        <listitem>
          <para>소프트웨어 패키지의 <filename>configure.in</filename> 파일을 작성하는 데 도움이 됨. 디렉토리 트리에서 원본 파일을 검사하여 일반적인 이식성 문제를 파악하고 패키지의 예비 <filename>configure.in</filename> 파일 역할을 하는 <filename>configure.scan</filename> 파일을 생성한다</para>
          <indexterm zone="ch-system-autoconf autoscan">
            <primary sortas="b-autoscan">autoscan</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="autoupdate">
        <term><command>autoupdate</command></term>
        <listitem>
          <para>이전 이름으로 <command>autoconf</command> 매크로를 계속 호출하는 <filename>configure.in</filename> 파일을 수정해서 현재 매크로 이름을 사용하도록 한다</para>
          <indexterm zone="ch-system-autoconf autoupdate">
            <primary sortas="b-autoupdate">autoupdate</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ifnames">
        <term><command>ifnames</command> </term>
        <listitem>
          <para>소프트웨어 패키지의 <filename>configure.in</filename> 파일을 작성할 때 도움이 됨. 패키지가 C 전처리기 조건부에서 사용하는 식별자를 출력한다. [패키지가 이미 이식성을 갖도록 설정되어 있으면, 이 프로그램을 통해 어떤 <command>configure</command>을 확인해야 하는지 파악할 수 있다. <command>autoscan</command>에 의해 생성된 <filename>configure.in</filename> 파일의 공백도 채울 수 있다.]</para>
          <indexterm zone="ch-system-autoconf ifnames">
            <primary sortas="b-ifnames">ifnames</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
