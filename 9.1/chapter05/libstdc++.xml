<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-tools-libstdcpp" role="wrap">
  <?dbhtml filename="gcc-libstdc++.html"?>

  <sect1info condition="script">
    <productname>gcc-libstdc++</productname>
    <productnumber>&gcc-version;</productnumber>
    <address>&gcc-url;</address>
  </sect1info>

  <title>Libstdc++ from GCC-&gcc-version;</title>

  <indexterm zone="ch-tools-libstdcpp">
    <primary sortas="a-GCC">GCC</primary>
    <secondary>tools, libstdc++</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>Libstdc++은 표준 C++ 라이브러리이다. 이것은 C++ 코드를 컴파일할 때 필요하지만(GCC의 일부는 C++로 쓰여졌다), <xref linkend="ch-tools-gcc-pass1"/>를 빌드할 때는 설치를 미룰 수 밖에 없었다. 그 때는 아직 /tools에 없었던 glibc가 필요했기 때문이다.    </para>

    <segmentedlist>
      <segtitle>&buildtime;</segtitle>
      <segtitle>&diskspace;</segtitle>

      <seglistitem>
        <seg>&libstdcpp-ch5-sbu;</seg>
        <seg>&libstdcpp-ch5-du;</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Target Libstdc++ 설치</title>

    <note>
      <para><application>Libstdc++</application>는 GCC 소스의 일부이다. 
GCC tarball을 먼저 풀고 <filename>gcc-&gcc-version;</filename> 디렉토리로 이동해야 한다.</para>
    </note>

    <para>Libstdc++을 위한 별도의 디렉토리를 생성하고 이동하라:</para>

<screen><userinput remap="pre">mkdir -v build
cd       build</userinput></screen>

    <para>Libstdc++ 컴파일을 준비한다:</para>

<screen><userinput remap="configure">../libstdc++-v3/configure           \
    --host=$LFS_TGT                 \
    --prefix=/tools                 \
    --disable-multilib              \
    --disable-nls                   \
    --disable-libstdcxx-threads     \
    --disable-libstdcxx-pch         \
    --with-gxx-include-dir=/tools/$LFS_TGT/include/c++/&gcc-version;</userinput></screen>

    <variablelist>
      <title>Configure 옵션들의 의미:</title>

      <varlistentry>
        <term><parameter>--host=...</parameter></term>
        <listitem>
          <para><filename>/usr/bin</filename>에 있는 컴파일러 대신 방금 만든 크로스 컴파일러를 사용하도록 지시한다.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--disable-libstdcxx-threads</parameter></term>
        <listitem>
			<para>GCC 1단계가 스레드를 지원하지 않기 때문에 C++ 스레드 라이브러리도 지원되지 않는다.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--disable-libstdcxx-pch</parameter></term>
        <listitem>
          <para>이 단계에서 필요하지 않은 사전 컴파일된 include 파일의 설치를 방지한다.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--with-gxx-include-dir=/tools/$LFS_TGT/include/c++/&gcc-version;</parameter></term>
        <listitem>
          <para>C++ 컴파일러가 표준 include 파일을 검색하는 위치이다. 일반적으로는 이 정보가 최상위 디렉토리로부터 Libstdc++ <command>configure</command> 옵션으로 자동 전달된다. 때문에 우리는 이 주소를 명시적으로 입력해야 한다.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Libstdc++를 컴파일한다:</para>

<screen><userinput remap="make">make</userinput></screen>

    <para>라이브러리를 설치한다:</para>

<screen><userinput remap="install">make install</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title/>

    <para>이 패키지에 대한 자세한 정보는 <xref linkend="contents-gcc" role="."/>에서 찾을 수 있다.</para>

  </sect2>

</sect1>
